# imports framework and necessary libraries
import sys
from evoman.environment import Environment
from demo_controller import player_controller
import numpy as np
import matplotlib.pyplot as plt
import os

def main():

    experiment_name = 'best_tester'
    pre_trained_individual = np.array([-0.058999715249527795, -0.015457081575383613, 0.2627546588718861, -0.20654296204172007, -0.028578143878109405, -0.10522831881110277, 0.0752346519424962, 0.47562088052413914, 0.49801951797932437, 0.13011044973882324, 0.4331006600280071, -0.8893983661494996, 0.2896128571906073, -0.30344445307313284, 0.013516349597142535, 0.2777166248295088, 0.10576031421178603, 0.6295495439634081, 0.41476864175762224, -0.39224886660733344, 0.6892787579639132, 0.1872022499882589, -0.027163398174565388, 0.14957244419744786, -0.2723004481041725, -0.4602914432616106, -0.18067369694671304, 0.214497131829822, -0.3377939179557365, 0.3258278396732326, -0.38164683463503785, -0.4053436153049389, -0.5566644315829588, -0.34409942014910827, 0.22687752805806866, 0.1526093645880112, 0.2743139285731903, 0.11716252959190987, 0.3921527154081715, 0.009139300804924692, 0.3239234008845111, -0.06292356575916297, 0.5036469114933049, -0.0332592565739213, -0.04974820630055947, 0.18397929294183724, -0.5378909959485796, 0.20518892433637126, 0.5965648275226714, 0.4236241635108863, -0.291798917623267, 0.22796465568491736, 0.2494107320177855, -0.07491072409958607, -0.11971020262451511, -0.11910788898789568, 0.000502215777709647, 0.6472491109695996, 0.49356714671417157, -0.16749593890855857, -0.2013313818125393, 0.3005187594279328, 0.32414854736234394, 0.030319857909226963, 0.2371043279917995, -0.2133981848438759, 0.4529419411456179, 0.3990194774180929, -0.39017890680209744, 0.011338227626260997, -0.22654140245659013, -0.16431869681836964, -0.12334425040596941, -0.3630425531787908, -0.1944252113814006, -0.09698695337061208, 0.31811536907060567, -0.1882445976590203, -0.3981426962042036, 0.3922366697166547, -0.1911213349483511, -0.01923954699135921, 0.2101451026087222, 0.08940942344994095, 0.5177716543130286, -0.6597142203426777, -0.5916066754718717, -0.14474311989702388, -0.42938217550572216, -0.23999722954823563, -0.2707390169782231, -0.4071284258176614, 0.3563360387739195, 0.24578746610462282, -0.6124902124750582, -0.044077896321254376, -0.4999646682107429, 0.14596001552608828, -0.35032785815477563, -0.5746274916232325, 0.2981392010377823, 0.04036262674216526, 0.566131603014352, -0.46416344944669197, 0.10896005431562594, 0.16721823126752022, -0.48464306245742705, 0.011245297587173575, -0.3737273564094606, 0.1852365022444678, 0.3713920101693915, 0.23372976139400992, 0.365519451900604, 0.027573659966731112, -0.36797262348611015, 0.060672034472136906, 0.9895719930212439, 0.05641658098116023, -0.56021783868316, -0.12420616326565152, -0.032525133304299195, -0.5963355500618627, 0.3351507693043764, -0.1896902488436205, -0.2262846440519343, -0.4640325618415878, 0.47469371669051114, -0.4207232785922099, 0.36746391544392, -0.43642098254414347, 0.2729992380169433, 0.27378134397703785, -0.40458791207213274, -0.3632755173260143, 0.18497775965245794, 0.22853112215055077, -0.1715752481668198, -0.26070323237419546, 0.1048780480253789, -0.20544190919994862, -0.010728709347035747, 0.3076228906494239, 0.5416664443364483, -0.48980191896805936, 0.3960164732737954, -0.31719191152772735, 0.6377705775320175, -0.5502620849400234, -0.15180829642749655, 0.05411437498241736, 0.20001758048316742, 0.029019985439566846, 0.13598641430494876, -0.14871490684057828, 0.47847180224766206, 0.27875469901917044, 0.3050307167698337, 0.010154636795207027, -0.6031912913514078, -0.6733201759855412, -0.3542852228667995, -0.09492200028885953, -0.22325885197012962, 0.945235128646086, -0.08492422918818666, 0.07070828040414834, 0.19513669590506114, 0.010244595250903503, 0.3738424947988348, -0.1990136325037387, 0.34972775421990887, 0.07177136014923546, 0.18823672589248375, -0.3668983604528407, 0.07177289758997793, 0.5896310588014979, -0.461160790869021, -0.3234050130369171, -0.01699403059069688, 0.24829204194288498, 0.5062660375442247, -0.40520258168387324, -0.8476837794291745, -0.4589879710126626, -0.10992366253787995, 0.33698039002142266, -0.3848063208506286, -0.3003461526476516, 0.2830437198826336, -0.13229741369489242, 0.29409120629038193, 0.36180585310680524, -0.2834118467128649, -0.07894830769858782, 0.12687192852943152, 0.183438751076896, 0.32003944492422887, 0.1866085809681788, 0.21061263885111042, -0.2828405311622573, 0.03992261664300816, -0.06221949378201456, 0.4296159189050638, -0.04553371818431856, -0.28436389441494925, 0.5524316061659451, -0.012902066533912467, -0.09437234240178928, 0.5873005310252354, 0.3329438312954273, -0.10032749717655783, -0.04271680310465938, -0.1271886171420526, -0.06385027697069438, 0.06884819719722535, -0.18920293618212086, 0.5304833820545239, -0.008231083527070344, 0.3788248174047889, 0.08506761757500503, 0.7375360039709129, -0.5564347947244035, -0.24561548290033802, 0.4120218664809306, -0.0645950716106806, -0.020195785878571633, 0.22024871825128609, 0.1581887281812377, 0.3036171226906975, 0.3663222588233933, 0.2854185911810756, -0.22917666597859565, -0.02519428510631211, -0.4026637432355621, 0.5449294523552162, 0.24164167938335876, 0.3311760275641065, 0.027299025605414817, -0.035000046248714514, 0.40886749292977886, 0.09706284397711559, -0.5718978387088403, 0.1445153801385058, -0.21930495465736113, 0.16753449206717774, -0.16820666352936248, -0.15808225150430635, 0.20915241981497001, -0.20096120688925356, 0.08835330683336534, -0.2273623002247694, 0.3395809561331452, 0.2917364621049018, -0.2107349895914849, -0.3404753933618888, -0.41182176240403545, -0.1415556740402713, 0.15640447333098823, -0.268535824621601, 0.34902614304974444, -0.08725219599944226, -0.42255219857113746, 0.3902778323114982, 0.32746259930445587, 0.29692541750303136])  # Replace with your actual weights

    # set up neurons and stat lists
    n_hidden_neurons = 10
    individual_gains = []
    total_gains = []

    # loop through each enemy
    test_enemies = list(range(1, 9))
    for enemy in test_enemies:
        # initialise the environment for current enemy (set to normal and not headless to observe agent behaviour)
        test_env = Environment(
            experiment_name=experiment_name,
            enemies=[enemy],
            multiplemode="no",
            playermode="ai",
            player_controller=player_controller(n_hidden_neurons),
            enemymode="static",
            level=2,
            speed="normal",
            visuals=True
        )

        # play with current individual
        f, p, e, t = test_env.play(pcont=pre_trained_individual)

        player_energy = test_env.get_playerlife()
        enemy_energy = test_env.get_enemylife()

        print(f"Enemy {enemy}:")
        print(f"Player Energy: {player_energy}")
        print(f"Enemy Energy: {enemy_energy}")
        print(f"Fitness: {f}")

        individual_gain = player_energy - enemy_energy
        individual_gains.append((enemy, individual_gain))
        total_gains.append(individual_gain)

    for enemy, gain in individual_gains:
        print(f"Enemy {enemy}: Individual Gain = {gain}")

    # calculate and print average gains
    average_gain = np.mean(total_gains)
    print(f"Average Individual Gain Over All Enemies: {average_gain}")

    # save stats to output file
    with open(f"{experiment_name}/individual_gains.txt", 'w') as file:
        for enemy, gain in individual_gains:
            file.write(f"Enemy {enemy}: Individual Gain = {gain}\n")
        file.write(f"Average Gain: {average_gain}\n")

if __name__ == '__main__':
    main()
